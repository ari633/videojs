{"mappings":"MAAO,gIAAe,CACpBA,EAAS,CACPC,OAAQ,OACRC,OAAQ,GACRC,MAAO,GACPC,YAAa,EACbC,WAAY,OAIFC,SAASC,cAAeP,EAAOC,QACvCO,UAAS,kFAuCHR,EAAGE,0BACAF,EAAAS,kGAIPT,EAAeG,stBAoClBO,EAAOJ,SAAAC,cAAA,WACDD,SAAyBC,cAAK,oBAC7BD,SAAKC,cAAA,eACXD,SAAcC,cAAc,SAC7BI,EAAAL,SAAAC,cAAA,SACFK,EAAAN,SAAAC,cAAA,iBAEKM,EAAAP,SAA4BC,cAAS,eACvCO,EAAQR,SAASC,cAAa,eACxBD,SAAcC,cAAe,oBACzBD,SAAWC,cAAc,mBACpCQ,EAAAT,SAAAC,cAAA,cACFS,EAAAV,SAAAC,cAAA,cAEDG,EAAMO,gBAAgB,YACtBC,EAAKC,MAAAC,WAAyB,UAE9BV,EAAAW,iBAAS,cAA4B,WACnC,GAAAX,EAAMY,WAAeC,MAAO,CAC5BC,EAAiBC,YAAWC,EAAchB,EAAAY,UAC1C,MAAMK,EAAc3B,EAAAI,YAAmBM,EAAQY,SAAM,IACtDP,EAAAI,MAAAS,KAAAD,EAAA,QAsCDjB,EAAMW,iBAAY,YAAiB,KACnC,GAAOX,EAAAmB,SAASC,OAAA,EAAA,CACjB,MAAAC,EAAArB,EAAAmB,SAAAG,IAAAtB,EAAAmB,SAAAC,OAAA,GAGWjB,EAAAM,MAAAc,MAAAF,EAAArB,EAAAY,SAAA,IAAA,yCAvCV,WAEA,MAAAY,EAAaxB,EAA8ByB,YAAAzB,EAASY,SAAA,IAClDV,EAAWO,MAAMc,MACfC,EAAe,IAElBE,EAAAX,YAAAC,EAAAhB,EAAAyB,aAEIzB,EAAAyB,aAAyBnC,EAASI,aAAAM,EAAAyB,aAAAnC,EAAAK,WAAAW,EAAAG,MAAAC,WAAA,UACjCV,EAAAyB,aAAanC,EAAoBK,aACnCW,EAAaG,MAAAC,WAAoB,yCAIrC,WACDV,EAAA2B,QAEYC,EAAAC,aAAA,YAAA,KACP7B,EAAU4B,OACVpB,EAAUC,MAAKC,WAAc,WAE7BkB,EAAAC,aAAW,YAAA,KACX7B,EAAU8B,QAGZtB,EAAWC,MAAGC,WAAO","sources":["Code/www/vidplayer/lib/videoplayer/src/index.js"],"sourcesContent":["export const loadVideo = (\n  config = {\n    target: '#app',\n    source: '',\n    thumb: '',\n    showThumbAt: 4,\n    thumbEndAt: 60,\n  }\n) => {\n\n  const app = document.querySelector (config.target);\n  app.innerHTML = `\n    <div class=\"video-wrapper\">\n      <video\n        controls\n        src=${config.source}\n        poster=${config.poster}\n        width=\"100%\"\n      ></video>\n      <div class=\"ads-thumb\">\n        <img src=${config.thumb} />\n      </div>\n      <div class=\"controls\">\n        <div class=\"progress\">\n          <div class=\"progress-bar\"></div>\n          <div class=\"buffer-bar\"></div>\n          <div class=\"dot-thumb\"></div>\n        </div>\n        <div class=\"button-controls\">\n          <div>\n            <button\n              class=\"play\"\n              data-icon=\"P\"\n              aria-label=\"play pause toggle\"\n            ></button>\n            <span class=\"remaining-time\">00:00</span> /\n            <span class=\"duration-time\">00:00</span>\n          </div>\n          <div>\n            <button class=\"full\" data-icon=\"M\" aria-label=\"full\"></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  const video = document.querySelector ('video');\n  const videoWrapper = document.querySelector ('.video-wrapper');\n  const controls = document.querySelector ('.controls');\n\n  const play = document.querySelector ('.play');\n  const full = document.querySelector ('.full');\n  const progressBar = document.querySelector ('.progress-bar');\n  const bufferBar = document.querySelector ('.buffer-bar');\n  const progress = document.querySelector ('.progress');\n  const durationTime = document.querySelector ('.duration-time');\n  const remainingTime = document.querySelector ('.remaining-time');\n  const dotThumb = document.querySelector ('.dot-thumb');\n  const adsThumb = document.querySelector ('.ads-thumb');\n\n  video.removeAttribute ('controls');\n  controls.style.visibility = 'visible';\n\n  video.addEventListener ('loadeddata', function () {\n    if (video.duration !== isNaN) {\n      durationTime.textContent = getTimer (video.duration);\n\n      const atIndex = config.showThumbAt / video.duration * 100;\n      dotThumb.style.left = atIndex + '%';\n    }\n  });\n\n  function handleEvent () {\n    const currentPercent = video.currentTime / video.duration * 100;\n    progressBar.style.width = currentPercent + '%';\n    remainingTime.textContent = getTimer (video.currentTime);\n    if (\n      video.currentTime >= config.showThumbAt &&\n      video.currentTime <= config.thumbEndAt\n    ) {\n      adsThumb.style.visibility = 'visible';\n    } else if (video.currentTime >= config.thumbEndAt) {\n      adsThumb.style.visibility = 'hidden';\n    }\n  }\n\n  function playPauseMedia () {\n    if (video.paused) {\n      play.setAttribute ('data-icon', 'u');\n      video.play ();\n      controls.style.visibility = 'hidden';\n    } else {\n      play.setAttribute ('data-icon', 'P');\n      video.pause ();\n      controls.style.visibility = 'visible';\n    }\n  }\n\n  video.addEventListener ('progress', () => {\n    if (video.buffered.length > 0) {\n      const bufferedEnd = video.buffered.end (video.buffered.length - 1);\n      bufferBar.style.width = bufferedEnd / video.duration * 100 + '%';\n    }\n  });\n\n  video.addEventListener ('timeupdate', handleEvent);\n  play.addEventListener ('click', playPauseMedia);\n\n  progress.addEventListener ('click', e => {\n    const percentBar = e.offsetX / progress.clientWidth * 100;\n    progressBar.style.width = e.offsetX + 'px';\n    video.currentTime = percentBar * video.duration / 100;\n  });\n\n  videoWrapper.addEventListener ('mouseenter', () => {\n    controls.style.visibility = 'visible';\n  });\n\n  videoWrapper.addEventListener ('mouseleave', () => {\n    if (!video.paused) {\n      controls.style.visibility = 'hidden';\n    }\n  });\n\n  full.addEventListener ('click', () => {\n    if (videoWrapper.mozRequestFullScreen) {\n      videoWrapper.mozRequestFullScreen ();\n    } else if (videoWrapper.webkitRequestFullScreen) {\n      videoWrapper.webkitRequestFullScreen ();\n    }\n  });\n}\n\nexport const getTimer = time => {\n  let minutes = Math.floor (time / 60);\n  let seconds = Math.floor (time - minutes * 60);\n  let minuteValue;\n  let secondValue;\n  if (minutes < 10) {\n    minuteValue = '0' + minutes;\n  } else {\n    minuteValue = minutes;\n  }\n\n  if (seconds < 10) {\n    secondValue = '0' + seconds;\n  } else {\n    secondValue = seconds;\n  }\n\n  const mediaTime = minuteValue+' : '+secondValue;\n  return mediaTime;\n};\n\n\nwindow.$ = {\n  loadVideo\n};"],"names":["config","target","source","thumb","showThumbAt","thumbEndAt","document","querySelector","innerHTML","poster","video","full","progressBar","bufferBar","progress","dotThumb","adsThumb","removeAttribute","controls","style","visibility","addEventListener","duration","isNaN","durationTime","textContent","$4c26e401e231137f$export$3ef70bb7b6c88436","atIndex","left","buffered","length","bufferedEnd","end","width","currentPercent","currentTime","remainingTime","paused","play","setAttribute","pause"],"version":3,"file":"index.js.map"}